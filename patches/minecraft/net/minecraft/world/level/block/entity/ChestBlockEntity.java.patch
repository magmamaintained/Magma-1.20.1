--- a/net/minecraft/world/level/block/entity/ChestBlockEntity.java
+++ b/net/minecraft/world/level/block/entity/ChestBlockEntity.java
@@ -22,6 +_,10 @@
 import net.minecraft.world.level.block.ChestBlock;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.block.state.properties.ChestType;
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.entity.HumanEntity;
+
+import java.util.List;
 
 public class ChestBlockEntity extends RandomizableContainerBlockEntity implements LidBlockEntity {
    private static final int f_155323_ = 1;
@@ -50,6 +_,37 @@
    };
    private final ChestLidController f_155325_ = new ChestLidController();
 
+   // CraftBukkit start - add fields and methods
+   public List<HumanEntity> transaction = new java.util.ArrayList<HumanEntity>();
+   private int maxStack = MAX_STACK;
+
+   public List<ItemStack> getContents() {
+      return this.f_59073_;
+   }
+
+   public void onOpen(CraftHumanEntity who) {
+      transaction.add(who);
+   }
+
+   public void onClose(CraftHumanEntity who) {
+      transaction.remove(who);
+   }
+
+   public List<HumanEntity> getViewers() {
+      return transaction;
+   }
+
+   @Override
+   public int m_6893_() {
+      return maxStack;
+   }
+
+   public void setMaxStackSize(int size) {
+      maxStack = size;
+   }
+   // CraftBukkit end
+
+
    protected ChestBlockEntity(BlockEntityType<?> p_155327_, BlockPos p_155328_, BlockState p_155329_) {
       super(p_155327_, p_155328_, p_155329_);
    }
@@ -160,6 +_,45 @@
       return ChestMenu.m_39237_(p_59082_, p_59083_, this);
    }
 
+   private net.minecraftforge.common.util.LazyOptional<net.minecraftforge.items.IItemHandlerModifiable> chestHandler;
+   @Override
+   public void m_155250_(BlockState p_155251_) {
+      super.m_155250_(p_155251_);
+      if (this.chestHandler != null) {
+         net.minecraftforge.common.util.LazyOptional<?> oldHandler = this.chestHandler;
+         this.chestHandler = null;
+         oldHandler.invalidate();
+      }
+   }
+
+   @Override
+   public <T> net.minecraftforge.common.util.LazyOptional<T> getCapability(net.minecraftforge.common.capabilities.Capability<T> cap, Direction side) {
+       if (!this.f_58859_ && cap == net.minecraftforge.common.capabilities.ForgeCapabilities.ITEM_HANDLER) {
+          if (this.chestHandler == null)
+             this.chestHandler = net.minecraftforge.common.util.LazyOptional.of(this::createHandler);
+          return this.chestHandler.cast();
+       }
+       return super.getCapability(cap, side);
+   }
+
+   private net.minecraftforge.items.IItemHandlerModifiable createHandler() {
+      BlockState state = this.m_58900_();
+      if (!(state.m_60734_() instanceof ChestBlock)) {
+         return new net.minecraftforge.items.wrapper.InvWrapper(this);
+      }
+      Container inv = ChestBlock.m_51511_((ChestBlock) state.m_60734_(), state, m_58904_(), m_58899_(), true);
+      return new net.minecraftforge.items.wrapper.InvWrapper(inv == null ? this : inv);
+   }
+
+   @Override
+   public void invalidateCaps() {
+      super.invalidateCaps();
+      if (chestHandler != null) {
+         chestHandler.invalidate();
+         chestHandler = null;
+      }
+   }
+
    public void m_155350_() {
       if (!this.f_58859_) {
          this.f_155324_.m_155476_(this.m_58904_(), this.m_58899_(), this.m_58900_());
@@ -171,4 +_,11 @@
       Block block = p_155335_.m_60734_();
       p_155333_.m_7696_(p_155334_, block, 1, p_155337_);
    }
+
+   // CraftBukkit start
+   @Override
+   public boolean m_6326_() {
+      return true;
+   }
+   // CraftBukkit end
 }
