--- a/net/minecraft/world/level/block/PressurePlateBlock.java
+++ b/net/minecraft/world/level/block/PressurePlateBlock.java
@@ -3,6 +_,7 @@
 import net.minecraft.core.BlockPos;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.LivingEntity;
+import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.block.state.BlockBehaviour;
 import net.minecraft.world.level.block.state.BlockState;
@@ -10,6 +_,7 @@
 import net.minecraft.world.level.block.state.properties.BlockSetType;
 import net.minecraft.world.level.block.state.properties.BlockStateProperties;
 import net.minecraft.world.level.block.state.properties.BooleanProperty;
+import org.bukkit.event.entity.EntityInteractEvent;
 
 public class PressurePlateBlock extends BasePressurePlateBlock {
    public static final BooleanProperty f_55249_ = BlockStateProperties.f_61448_;
@@ -42,8 +_,27 @@
             throw new IncompatibleClassChangeError();
       }
 
-      Class oclass = oclass1;
-      return m_289607_(p_55264_, f_49287_.m_82338_(p_55265_), oclass) > 0 ? 15 : 0;
+      // CraftBukkit start - Call interact event when turning on a pressure plate
+      for (Entity entity : getEntities(p_55264_, f_49287_.m_82338_(p_55265_), oclass1)) {
+         if (this.m_6016_(p_55264_.m_8055_(p_55265_)) == 0) {
+            org.bukkit.World bworld = p_55264_.getWorld();
+            org.bukkit.plugin.PluginManager manager = p_55264_.getCraftServer().getPluginManager();
+            org.bukkit.event.Cancellable cancellable;
+            if (entity instanceof Player) {
+               cancellable = org.bukkit.craftbukkit.event.CraftEventFactory.callPlayerInteractEvent((Player) entity, org.bukkit.event.block.Action.PHYSICAL, p_55265_, null, null, null);
+            } else {
+               cancellable = new EntityInteractEvent(entity.getBukkitEntity(), bworld.getBlockAt(p_55265_.m_123341_(), p_55265_.m_123342_(), p_55265_.m_123343_()));
+               manager.callEvent((EntityInteractEvent) cancellable);
+            }
+            // We only want to block turning the plate on if all events are cancelled
+            if (cancellable.isCancelled()) {
+               continue;
+            }
+         }
+         return 15;
+      }
+      return 0;
+      // CraftBukkit end
    }
 
    protected void m_7926_(StateDefinition.Builder<Block, BlockState> p_55262_) {
