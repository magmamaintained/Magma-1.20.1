--- a/net/minecraft/world/level/chunk/storage/ChunkSerializer.java
+++ b/net/minecraft/world/level/chunk/storage/ChunkSerializer.java
@@ -108,9 +_,9 @@
                palettedcontainer = new PalettedContainer<>(Block.f_49791_, Blocks.f_50016_.m_49966_(), PalettedContainer.Strategy.f_188137_);
             }
 
-            PalettedContainerRO<Holder<Biome>> palettedcontainerro;
+            PalettedContainer<Holder<Biome>> palettedcontainerro; // CraftBukkit - read/write
             if (compoundtag.m_128425_("biomes", 10)) {
-               palettedcontainerro = codec.parse(NbtOps.f_128958_, compoundtag.m_128469_("biomes")).promotePartial((p_188274_) -> {
+               palettedcontainerro = (PalettedContainer<Holder<Biome>>) codec.parse(NbtOps.f_128958_, compoundtag.m_128469_("biomes")).promotePartial((p_188274_) -> {
                   m_188239_(p_188233_, k, p_188274_);
                }).getOrThrow(false, f_63449_::error);
             } else {
@@ -159,6 +_,7 @@
             return BuiltInRegistries.f_257020_.m_6612_(ResourceLocation.m_135820_(p_258990_));
          }, p_188233_);
          chunkaccess = new LevelChunk(p_188231_.m_6018_(), p_188233_, upgradedata, levelchunkticks, levelchunkticks1, k1, alevelchunksection, m_196890_(p_188231_, p_188234_), blendingdata);
+         if (p_188234_.m_128441_("ForgeCaps")) ((LevelChunk)chunkaccess).readCapsFromNBT(p_188234_.m_128469_("ForgeCaps"));
       } else {
          ProtoChunkTicks<Block> protochunkticks = ProtoChunkTicks.m_193302_(p_188234_.m_128437_("block_ticks", 10), (p_258992_) -> {
             return BuiltInRegistries.f_256975_.m_6612_(ResourceLocation.m_135820_(p_258992_));
@@ -212,6 +_,7 @@
       }
 
       if (chunkstatus$chunktype == ChunkStatus.ChunkType.LEVELCHUNK) {
+         net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.level.ChunkDataEvent.Load(chunkaccess, p_188234_, chunkstatus$chunktype));
          return new ImposterProtoChunk((LevelChunk)chunkaccess, false);
       } else {
          ProtoChunk protochunk1 = (ProtoChunk)chunkaccess;
@@ -235,6 +_,7 @@
             protochunk1.m_188186_(generationstep$carving, new CarvingMask(compoundtag4.m_128467_(s1), chunkaccess.m_141937_()));
          }
 
+         net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.level.ChunkDataEvent.Load(chunkaccess, p_188234_, chunkstatus$chunktype));
          return protochunk1;
       }
    }
@@ -340,6 +_,14 @@
          }
 
          compoundtag.m_128365_("CarvingMasks", compoundtag4);
+      }
+      else if (p_63456_ instanceof LevelChunk levelChunk){
+          try {
+              final CompoundTag capTag = levelChunk.writeCapsToNBT();
+              if (capTag != null) compoundtag.m_128365_("ForgeCaps", capTag);
+          } catch (Exception exception) {
+              f_63449_.error("A capability provider has thrown an exception trying to write state. It will not persist. Report this to the mod author", exception);
+          }
       }
 
       m_188235_(p_63455_, compoundtag, p_63456_.m_183568_());
