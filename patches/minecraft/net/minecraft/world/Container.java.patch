--- a/net/minecraft/world/Container.java
+++ b/net/minecraft/world/Container.java
@@ -1,13 +_,16 @@
 package net.minecraft.world;
 
+import java.util.Collections;
 import java.util.Set;
 import java.util.function.Predicate;
 import net.minecraft.core.BlockPos;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.item.Item;
 import net.minecraft.world.item.ItemStack;
+import net.minecraft.world.item.crafting.Recipe;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.block.entity.BlockEntity;
+import org.bukkit.craftbukkit.v1_20_R1.entity.CraftHumanEntity;
 
 public interface Container extends Clearable {
    int f_146642_ = 64;
@@ -92,4 +_,35 @@
          return p_272670_.m_20275_((double)blockpos.m_123341_() + 0.5D, (double)blockpos.m_123342_() + 0.5D, (double)blockpos.m_123343_() + 0.5D) <= (double)(p_273411_ * p_273411_);
       }
    }
+
+   // CraftBukkit start
+   // Magma - add a default method for mods that don't override these methods
+   default java.util.List<ItemStack> getContents() {
+      return Collections.emptyList();
+   }
+   
+   void onOpen(CraftHumanEntity who);
+
+   void onClose(CraftHumanEntity who);
+
+   // Magma - add a default value so the server can unload chunks properly when getViewers() is not overridden by a mod
+   default java.util.List<org.bukkit.entity.HumanEntity> getViewers() {
+      return Collections.emptyList();
+   }
+
+   org.bukkit.inventory.InventoryHolder getOwner();
+
+   void setMaxStackSize(int size);
+
+   org.bukkit.Location getLocation();
+
+   default Recipe getCurrentRecipe() {
+      return null;
+   }
+
+   default void setCurrentRecipe(Recipe recipe) {
+   }
+
+   int MAX_STACK = 64;
+   // CraftBukkit end
 }
