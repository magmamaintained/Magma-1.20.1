--- a/net/minecraft/server/level/ServerPlayer.java
+++ b/net/minecraft/server/level/ServerPlayer.java
@@ -95,6 +_,7 @@
 import net.minecraft.world.Container;
 import net.minecraft.world.InteractionHand;
 import net.minecraft.world.MenuProvider;
+import net.minecraft.world.damagesource.CombatTracker;
 import net.minecraft.world.damagesource.DamageSource;
 import net.minecraft.world.effect.MobEffectInstance;
 import net.minecraft.world.effect.MobEffects;
@@ -113,6 +_,7 @@
 import net.minecraft.world.entity.player.Inventory;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.entity.projectile.AbstractArrow;
+import net.minecraft.world.food.FoodData;
 import net.minecraft.world.inventory.AbstractContainerMenu;
 import net.minecraft.world.inventory.ContainerListener;
 import net.minecraft.world.inventory.ContainerSynchronizer;
@@ -147,8 +_,16 @@
 import net.minecraft.world.phys.Vec3;
 import net.minecraft.world.scores.PlayerTeam;
 import net.minecraft.world.scores.Score;
+import net.minecraft.world.scores.Scoreboard;
 import net.minecraft.world.scores.Team;
 import net.minecraft.world.scores.criteria.ObjectiveCriteria;
+import org.bukkit.Bukkit;
+import org.bukkit.Location;
+import org.bukkit.WeatherType;
+import org.bukkit.craftbukkit.CraftWorld;
+import org.bukkit.craftbukkit.entity.CraftPlayer;
+import org.bukkit.craftbukkit.util.CraftLocation;
+import org.bukkit.event.player.PlayerSpawnChangeEvent;
 import org.slf4j.Logger;
 
 public class ServerPlayer extends Player {
@@ -245,6 +_,22 @@
    public int f_8943_;
    public boolean f_8944_;
 
+   // CraftBukkit start
+   public String displayName;
+   public Component listName;
+   public org.bukkit.Location compassTarget;
+   public int newExp = 0;
+   public int newLevel = 0;
+   public int newTotalExp = 0;
+   public boolean keepLevel = false;
+   public double maxHealthCache;
+   public boolean joining = true;
+   public boolean sentListPacket = false;
+   public Integer clientViewDistance;
+   public String kickLeaveMessage = null; // SPIGOT-3034: Forward leave message to PlayerQuitEvent
+   public String locale = "en_us"; // CraftBukkit - add, lowercase
+   // CraftBukkit end
+
    public ServerPlayer(MinecraftServer p_254143_, ServerLevel p_254435_, GameProfile p_253651_) {
       super(p_254435_, p_254435_.m_220360_(), p_254435_.m_220361_(), p_253651_);
       this.f_8939_ = p_254143_.m_7950_(this);
@@ -570,6 +_,7 @@
 
    public void m_6667_(DamageSource p_9035_) {
       this.m_146850_(GameEvent.f_223707_);
+      if (net.minecraftforge.common.ForgeHooks.onLivingDeath(this, p_9035_)) return;
       boolean flag = this.m_9236_().m_46469_().m_46207_(GameRules.f_46142_);
       if (flag) {
          Component component = this.m_21231_().m_19293_();
@@ -716,11 +_,12 @@
    }
 
    @Nullable
-   public Entity m_5489_(ServerLevel p_9180_) {
+   public Entity changeDimension(ServerLevel p_9180_, net.minecraftforge.common.util.ITeleporter teleporter) {
+      if (!net.minecraftforge.common.ForgeHooks.onTravelToDimension(this, p_9180_.m_46472_())) return null;
       this.f_8927_ = true;
       ServerLevel serverlevel = this.m_284548_();
       ResourceKey<Level> resourcekey = serverlevel.m_46472_();
-      if (resourcekey == Level.f_46430_ && p_9180_.m_46472_() == Level.f_46428_) {
+      if (resourcekey == Level.f_46430_ && p_9180_.m_46472_() == Level.f_46428_ && teleporter.isVanilla()) { //Forge: Fix non-vanilla teleporters triggering end credits
          this.m_19877_();
          this.m_284548_().m_143261_(this, Entity.RemovalReason.CHANGED_DIMENSION);
          if (!this.f_8944_) {
@@ -737,13 +_,14 @@
          PlayerList playerlist = this.f_8924_.m_6846_();
          playerlist.m_11289_(this);
          serverlevel.m_143261_(this, Entity.RemovalReason.CHANGED_DIMENSION);
-         this.m_146912_();
-         PortalInfo portalinfo = this.m_7937_(p_9180_);
+         this.revive();
+         PortalInfo portalinfo = teleporter.getPortalInfo(this, p_9180_, this::m_7937_);
          if (portalinfo != null) {
+            Entity e = teleporter.placeEntity(this, serverlevel, p_9180_, this.m_146908_(), spawnPortal -> {//Forge: Start vanilla logic
             serverlevel.m_46473_().m_6180_("moving");
             if (resourcekey == Level.f_46428_ && p_9180_.m_46472_() == Level.f_46429_) {
                this.f_8933_ = this.m_20182_();
-            } else if (p_9180_.m_46472_() == Level.f_46430_) {
+            } else if (spawnPortal && p_9180_.m_46472_() == Level.f_46430_) {
                this.m_9006_(p_9180_, BlockPos.m_274446_(portalinfo.f_77676_));
             }
 
@@ -755,6 +_,9 @@
             p_9180_.m_8817_(this);
             serverlevel.m_46473_().m_7238_();
             this.m_9209_(serverlevel);
+            return this;//forge: this is part of the ITeleporter patch
+            });//Forge: End vanilla logic
+            if (e != this) throw new java.lang.IllegalArgumentException(String.format(java.util.Locale.ENGLISH, "Teleporter %s returned not the player entity but instead %s, expected PlayerEntity %s", teleporter, e, this));
             this.f_8906_.m_9829_(new ClientboundPlayerAbilitiesPacket(this.m_150110_()));
             playerlist.m_11229_(this, p_9180_);
             playerlist.m_11292_(this);
@@ -763,10 +_,12 @@
                this.f_8906_.m_9829_(new ClientboundUpdateMobEffectPacket(this.m_19879_(), mobeffectinstance));
             }
 
+            if (teleporter.playTeleportSound(this, serverlevel, p_9180_))
             this.f_8906_.m_9829_(new ClientboundLevelEventPacket(1032, BlockPos.f_121853_, 0, false));
             this.f_8920_ = -1;
             this.f_8917_ = -1.0F;
             this.f_8918_ = -1;
+            net.minecraftforge.event.ForgeEventFactory.firePlayerChangedDimensionEvent(this, resourcekey, p_9180_.m_46472_());
          }
 
          return this;
@@ -830,6 +_,9 @@
    }
 
    public Either<Player.BedSleepingProblem, Unit> m_7720_(BlockPos p_9115_) {
+      java.util.Optional<BlockPos> optAt = java.util.Optional.of(p_9115_);
+      Player.BedSleepingProblem ret = net.minecraftforge.event.ForgeEventFactory.onPlayerSleepInBed(this, optAt);
+      if (ret != null) return Either.left(ret);
       Direction direction = this.m_9236_().m_8055_(p_9115_).m_61143_(HorizontalDirectionalBlock.f_54117_);
       if (!this.m_5803_() && this.m_6084_()) {
          if (!this.m_9236_().m_6042_().f_63858_()) {
@@ -840,7 +_,7 @@
             return Either.left(Player.BedSleepingProblem.OBSTRUCTED);
          } else {
             this.m_9158_(this.m_9236_().m_46472_(), p_9115_, this.m_146908_(), false, true);
-            if (this.m_9236_().m_46461_()) {
+            if (!net.minecraftforge.event.ForgeEventFactory.fireSleepingTimeCheck(this, optAt)) {
                return Either.left(Player.BedSleepingProblem.NOT_POSSIBLE_NOW);
             } else {
                if (!this.m_7500_()) {
@@ -878,6 +_,7 @@
    }
 
    private boolean m_9116_(BlockPos p_9117_, Direction p_9118_) {
+      if (p_9118_ == null) return false;
       return this.m_9222_(p_9117_) || this.m_9222_(p_9117_.m_121945_(p_9118_.m_122424_()));
    }
 
@@ -959,6 +_,7 @@
             this.f_8906_.m_9829_(new ClientboundOpenScreenPacket(abstractcontainermenu.f_38840_, abstractcontainermenu.m_6772_(), p_9033_.m_5446_()));
             this.m_143399_(abstractcontainermenu);
             this.f_36096_ = abstractcontainermenu;
+            net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.player.PlayerContainerEvent.Open(this, this.f_36096_));
             return OptionalInt.of(this.f_8940_);
          }
       }
@@ -977,6 +_,7 @@
       this.f_8906_.m_9829_(new ClientboundHorseScreenOpenPacket(this.f_8940_, p_9060_.m_6643_(), p_9059_.m_19879_()));
       this.f_36096_ = new HorseInventoryMenu(this.f_8940_, this.m_150109_(), p_9060_, p_9059_);
       this.m_143399_(this.f_36096_);
+      net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.player.PlayerContainerEvent.Open(this, this.f_36096_));
    }
 
    public void m_6986_(ItemStack p_9082_, InteractionHand p_9083_) {
@@ -1002,6 +_,7 @@
    public void m_9230_() {
       this.f_36096_.m_6877_(this);
       this.f_36095_.m_150414_(this.f_36096_);
+      net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.player.PlayerContainerEvent.Close(this, this.f_36096_));
       this.f_36096_ = this.f_36095_;
    }
 
@@ -1135,6 +_,15 @@
       this.m_36362_(p_9016_.m_36331_());
       this.m_36364_(p_9016_.m_36332_());
       this.m_219749_(p_9016_.m_219759_());
+
+      //Copy over a section of the Entity Data from the old player.
+      //Allows mods to specify data that persists after players respawn.
+      CompoundTag old = p_9016_.getPersistentData();
+      if (old.m_128441_(PERSISTED_NBT_TAG))
+          getPersistentData().m_128365_(PERSISTED_NBT_TAG, old.m_128423_(PERSISTED_NBT_TAG));
+      net.minecraftforge.event.ForgeEventFactory.onPlayerClone(this, p_9016_, !p_9017_);
+      this.tabListHeader = p_9016_.tabListHeader;
+      this.tabListFooter = p_9016_.tabListFooter;
    }
 
    protected void m_142540_(MobEffectInstance p_143393_, @Nullable Entity p_143394_) {
@@ -1215,6 +_,8 @@
    }
 
    public boolean m_143403_(GameType p_143404_) {
+      p_143404_ = net.minecraftforge.common.ForgeHooks.onChangeGameType(this, this.f_8941_.m_9290_(), p_143404_);
+      if (p_143404_ == null) return false;
       if (!this.f_8941_.m_143473_(p_143404_)) {
          return false;
       } else {
@@ -1282,6 +_,7 @@
       this.f_184127_ = p_9157_.f_195812_();
       this.m_20088_().m_135381_(f_36089_, (byte)p_9157_.f_133867_());
       this.m_20088_().m_135381_(f_36090_, (byte)(p_9157_.f_133868_() == HumanoidArm.LEFT ? 0 : 1));
+      this.language = p_9157_.f_133863_();
    }
 
    public boolean m_143432_() {
@@ -1341,6 +_,7 @@
    public void m_9213_(@Nullable Entity p_9214_) {
       Entity entity = this.m_8954_();
       this.f_8926_ = (Entity)(p_9214_ == null ? this : p_9214_);
+      while (this.f_8926_ instanceof net.minecraftforge.entity.PartEntity<?> partEntity) this.f_8926_ = partEntity.getParent(); // FORGE: fix MC-46486
       if (entity != this.f_8926_) {
          Level level = this.f_8926_.m_9236_();
          if (level instanceof ServerLevel) {
@@ -1380,7 +_,11 @@
 
    @Nullable
    public Component m_8957_() {
-      return null;
+      if (!this.hasTabListName) {
+         this.tabListDisplayName = net.minecraftforge.event.ForgeEventFactory.getPlayerTabListDisplayName(this);
+         this.hasTabListName = true;
+      }
+      return this.tabListDisplayName;
    }
 
    public void m_6674_(InteractionHand p_9031_) {
@@ -1405,21 +_,23 @@
       this.m_8127_();
       if (p_9000_ == this.m_9236_()) {
          this.f_8906_.m_9774_(p_9001_, p_9002_, p_9003_, p_9004_, p_9005_);
-      } else {
+      } else if (net.minecraftforge.common.ForgeHooks.onTravelToDimension(this, p_9000_.m_46472_())) {
          ServerLevel serverlevel = this.m_284548_();
          LevelData leveldata = p_9000_.m_6106_();
          this.f_8906_.m_9829_(new ClientboundRespawnPacket(p_9000_.m_220362_(), p_9000_.m_46472_(), BiomeManager.m_47877_(p_9000_.m_7328_()), this.f_8941_.m_9290_(), this.f_8941_.m_9293_(), p_9000_.m_46659_(), p_9000_.m_8584_(), (byte)3, this.m_219759_(), this.m_287157_()));
          this.f_8906_.m_9829_(new ClientboundChangeDifficultyPacket(leveldata.m_5472_(), leveldata.m_5474_()));
          this.f_8924_.m_6846_().m_11289_(this);
          serverlevel.m_143261_(this, Entity.RemovalReason.CHANGED_DIMENSION);
-         this.m_146912_();
+         this.revive();
          this.m_7678_(p_9001_, p_9002_, p_9003_, p_9004_, p_9005_);
          this.m_284127_(p_9000_);
          p_9000_.m_8622_(this);
          this.m_9209_(serverlevel);
          this.f_8906_.m_9774_(p_9001_, p_9002_, p_9003_, p_9004_, p_9005_);
+         this.f_8941_.m_9260_(p_9000_);
          this.f_8924_.m_6846_().m_11229_(this, p_9000_);
          this.f_8924_.m_6846_().m_11292_(this);
+         net.minecraftforge.event.ForgeEventFactory.firePlayerChangedDimensionEvent(this, serverlevel.m_46472_(), p_9000_.m_46472_());
       }
 
    }
@@ -1442,6 +_,31 @@
    }
 
    public void m_9158_(ResourceKey<Level> p_9159_, @Nullable BlockPos p_9160_, float p_9161_, boolean p_9162_, boolean p_9163_) {
+      // CraftBukkit start
+      this.setRespawnPosition(p_9159_, p_9160_, p_9161_, p_9162_, p_9163_, PlayerSpawnChangeEvent.Cause.UNKNOWN);
+   }
+
+   public void setRespawnPosition(ResourceKey<Level> p_9159_, @Nullable BlockPos p_9160_, float p_9161_, boolean p_9162_, boolean p_9163_, PlayerSpawnChangeEvent.Cause cause) {
+      ServerLevel newWorld = this.f_8924_.m_129880_(p_9159_);
+      Location newSpawn = (p_9160_ != null) ? CraftLocation.toBukkit(p_9160_, newWorld.getWorld(), p_9161_, 0) : null;
+      PlayerSpawnChangeEvent event = new PlayerSpawnChangeEvent(this.getBukkitEntity(), newSpawn, p_9163_, cause);
+      Bukkit.getServer().getPluginManager().callEvent(event);
+      if (event.isCancelled()) {
+         return;
+      }
+      newSpawn = event.getNewSpawn();
+      p_9163_ = event.isForced();
+      if (newSpawn != null) {
+         p_9159_ = ((CraftWorld) newSpawn.getWorld()).getHandle().m_46472_();
+         p_9160_ = BlockPos.m_274561_(newSpawn.getX(), newSpawn.getY(), newSpawn.getZ());
+         p_9161_ = newSpawn.getYaw();
+      } else {
+         p_9159_ = Level.f_46428_;
+         p_9160_ = null;
+         p_9161_ = 0.0F;
+      }
+      // CraftBukkit end
+      if (net.minecraftforge.event.ForgeEventFactory.onPlayerSpawnSet(this, p_9160_ == null ? Level.f_46428_ : p_9159_, p_9160_, p_9162_)) return;
       if (p_9160_ != null) {
          boolean flag = p_9160_.equals(this.f_8936_) && p_9159_.equals(this.f_8935_);
          if (p_9163_ && !flag) {
@@ -1493,6 +_,8 @@
       if (itementity == null) {
          return null;
       } else {
+         if (captureDrops() != null) captureDrops().add(itementity);
+         else
          this.m_9236_().m_7967_(itementity);
          ItemStack itemstack = itementity.m_32055_();
          if (p_9087_) {
@@ -1507,6 +_,76 @@
       }
    }
 
+   private String language = "en_us";
+   /**
+    * Returns the language last reported by the player as their local language.
+    * Defaults to en_us if the value is unknown.
+    */
+   public String getLanguage() {
+      return this.language;
+   }
+
+   private Component tabListHeader = Component.m_237119_();
+   private Component tabListFooter = Component.m_237119_();
+
+   public Component getTabListHeader() {
+       return this.tabListHeader;
+   }
+
+   /**
+    * Set the tab list header while preserving the footer.
+    *
+    * @param header the new header, or {@link Component#empty()} to clear
+    */
+   public void setTabListHeader(final Component header) {
+       this.setTabListHeaderFooter(header, this.tabListFooter);
+   }
+
+   public Component getTabListFooter() {
+       return this.tabListFooter;
+   }
+
+   /**
+    * Set the tab list footer while preserving the header.
+    *
+    * @param footer the new footer, or {@link Component#empty()} to clear
+    */
+   public void setTabListFooter(final Component footer) {
+       this.setTabListHeaderFooter(this.tabListHeader, footer);
+   }
+
+   /**
+    * Set the tab list header and footer at once.
+    *
+    * @param header the new header, or {@link Component#empty()} to clear
+    * @param footer the new footer, or {@link Component#empty()} to clear
+    */
+   public void setTabListHeaderFooter(final Component header, final Component footer) {
+       if (java.util.Objects.equals(header, this.tabListHeader)
+           && java.util.Objects.equals(footer, this.tabListFooter)) {
+           return;
+       }
+
+       this.tabListHeader = java.util.Objects.requireNonNull(header, "header");
+       this.tabListFooter = java.util.Objects.requireNonNull(footer, "footer");
+
+       this.f_8906_.m_9829_(new net.minecraft.network.protocol.game.ClientboundTabListPacket(header, footer));
+   }
+
+   // We need this as tablistDisplayname may be null even if the event was fired.
+   private boolean hasTabListName = false;
+   private Component tabListDisplayName = null;
+   /**
+    * Force the name displayed in the tab list to refresh, by firing {@link net.minecraftforge.event.entity.player.PlayerEvent.TabListNameFormat}.
+    */
+   public void refreshTabListName() {
+      Component oldName = this.tabListDisplayName;
+      this.tabListDisplayName = net.minecraftforge.event.ForgeEventFactory.getPlayerTabListDisplayName(this);
+      if (!java.util.Objects.equals(oldName, this.tabListDisplayName)) {
+         this.m_20194_().m_6846_().m_11268_(new net.minecraft.network.protocol.game.ClientboundPlayerInfoUpdatePacket(net.minecraft.network.protocol.game.ClientboundPlayerInfoUpdatePacket.Action.UPDATE_DISPLAY_NAME, this));
+      }
+   }
+
    public TextFilter m_8967_() {
       return this.f_8939_;
    }
@@ -1566,11 +_,14 @@
 
    public boolean m_182294_(boolean p_182295_) {
       Inventory inventory = this.m_150109_();
+      ItemStack selected = inventory.m_36056_();
+      if (selected.m_41619_() || !selected.onDroppedByPlayer(this)) return false;
+      if (m_6117_() && m_7655_() == InteractionHand.MAIN_HAND && (p_182295_ || selected.m_41613_() == 1)) m_5810_(); // Forge: fix MC-231097 on the serverside
       ItemStack itemstack = inventory.m_182403_(p_182295_);
       this.f_36096_.m_182417_(inventory, inventory.f_35977_).ifPresent((p_287377_) -> {
          this.f_36096_.m_150404_(p_287377_, inventory.m_36056_());
       });
-      return this.m_7197_(itemstack, false, true) != null;
+      return net.minecraftforge.common.ForgeHooks.onPlayerTossEvent(this, itemstack, true) != null;
    }
 
    public boolean m_184128_() {
@@ -1632,4 +_,150 @@
       }
 
    }
+
+   // CraftBukkit start - Add per-player time and weather.
+   public long timeOffset = 0;
+   public boolean relativeTime = true;
+
+   public long getPlayerTime() {
+      if (this.relativeTime) {
+         // Adds timeOffset to the current server time.
+         return this.m_9236_().m_46468_() + this.timeOffset;
+      } else {
+         // Adds timeOffset to the beginning of this day.
+         return this.m_9236_().m_46468_() - (this.m_9236_().m_46468_() % 24000) + this.timeOffset;
+      }
+   }
+
+   public WeatherType weather = null;
+
+   public WeatherType getPlayerWeather() {
+      return this.weather;
+   }
+
+   public void setPlayerWeather(WeatherType type, boolean plugin) {
+      if (!plugin && this.weather != null) {
+         return;
+      }
+      if (plugin) {
+         this.weather = type;
+      }
+      if (type == WeatherType.DOWNFALL) {
+         this.f_8906_.m_9829_(new ClientboundGameEventPacket(ClientboundGameEventPacket.f_132155_, 0));
+      } else {
+         this.f_8906_.m_9829_(new ClientboundGameEventPacket(ClientboundGameEventPacket.f_132154_, 0));
+      }
+   }
+
+   private float pluginRainPosition;
+   private float pluginRainPositionPrevious;
+
+   public void updateWeather(float oldRain, float newRain, float oldThunder, float newThunder) {
+      if (this.weather == null) {
+         // Vanilla
+         if (oldRain != newRain) {
+            this.f_8906_.m_9829_(new ClientboundGameEventPacket(ClientboundGameEventPacket.f_132160_, newRain));
+         }
+      } else {
+         // Plugin
+         if (pluginRainPositionPrevious != pluginRainPosition) {
+            this.f_8906_.m_9829_(
+                    new ClientboundGameEventPacket(ClientboundGameEventPacket.f_132160_, pluginRainPosition));
+         }
+      }
+      if (oldThunder != newThunder) {
+         if (weather == WeatherType.DOWNFALL || weather == null) {
+            this.f_8906_.m_9829_(
+                    new ClientboundGameEventPacket(ClientboundGameEventPacket.f_132161_, newThunder));
+         } else {
+            this.f_8906_.m_9829_(new ClientboundGameEventPacket(ClientboundGameEventPacket.f_132161_, 0));
+         }
+      }
+   }
+
+   public void tickWeather() {
+      if (this.weather == null) {
+         return;
+      }
+      pluginRainPositionPrevious = pluginRainPosition;
+      if (weather == WeatherType.DOWNFALL) {
+         pluginRainPosition += 0.01;
+      } else {
+         pluginRainPosition -= 0.01;
+      }
+      pluginRainPosition = Mth.m_14036_(pluginRainPosition, 0.0F, 1.0F);
+   }
+
+   public void resetPlayerWeather() {
+      this.weather = null;
+      this.setPlayerWeather(this.m_9236_().m_6106_().m_6533_() ? WeatherType.DOWNFALL : WeatherType.CLEAR, false);
+   }
+
+   @Override
+   public String toString() {
+      return super.toString() + "(" + this.m_6302_() + " at " + this.m_20185_() + "," + this.m_20186_() + "," + this.m_20189_() + ")";
+   }
+
+   // SPIGOT-1903, MC-98153
+   public void forceSetPositionRotation(double x, double y, double z, float yaw, float pitch) {
+      this.m_7678_(x, y, z, yaw, pitch);
+      this.f_8906_.m_9953_();
+   }
+
+   @Override
+   public boolean m_6107_() {
+      return super.m_6107_() || !getBukkitEntity().isOnline();
+   }
+
+   @Override
+   public Scoreboard m_36329_() {
+      return getBukkitEntity().getScoreboard().getHandle();
+   }
+
+   public void reset() {
+      float exp = 0;
+      boolean keepInventory = this.m_9236_().m_46469_().m_46207_(GameRules.f_46133_);
+      if (this.keepLevel) { // CraftBukkit - SPIGOT-6687: Only use keepLevel (was pre-set with RULE_KEEPINVENTORY value in PlayerDeathEvent)
+         exp = this.f_36080_;
+         this.newTotalExp = this.f_36079_;
+         this.newLevel = this.f_36078_;
+      }
+      this.m_21153_(this.m_21233_());
+      this.m_5810_(); // CraftBukkit - SPIGOT-6682: Clear active item on reset
+      this.f_19831_ = 0;
+      this.f_19789_ = 0;
+      this.f_36097_ = new FoodData(this);
+      this.f_36078_ = this.newLevel;
+      this.f_36079_ = this.newTotalExp;
+      this.f_36080_ = 0;
+      this.f_20919_ = 0;
+      this.setArrowCount(0, true); // CraftBukkit - ArrowBodyCountChangeEvent
+      this.removeAllEffects(org.bukkit.event.entity.EntityPotionEffectEvent.Cause.DEATH);
+      this.f_20948_ = true;
+      this.f_36096_ = this.f_36095_;
+      this.f_20888_ = null;
+      this.f_20949_ = null;
+      this.f_20944_ = new CombatTracker(this);
+      this.f_8920_ = -1;
+      if (this.keepLevel) { // CraftBukkit - SPIGOT-6687: Only use keepLevel (was pre-set with RULE_KEEPINVENTORY value in PlayerDeathEvent)
+         this.f_36080_ = exp;
+      } else {
+         this.m_6756_(this.newExp);
+      }
+      this.keepLevel = false;
+      this.m_20334_(0, 0, 0); // CraftBukkit - SPIGOT-6948: Reset velocity on death
+   }
+
+   @Override
+   public CraftPlayer getBukkitEntity() {
+      return (CraftPlayer) super.getBukkitEntity();
+   }
+
+   public int nextContainerCounterInt() {
+      m_9217_();
+      return f_8940_;
+   }
+
+   // CraftBukkit end
+
 }
