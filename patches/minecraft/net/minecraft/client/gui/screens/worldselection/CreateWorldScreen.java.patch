--- a/net/minecraft/client/gui/screens/worldselection/CreateWorldScreen.java
+++ b/net/minecraft/client/gui/screens/worldselection/CreateWorldScreen.java
@@ -120,6 +_,7 @@
    public static void m_232896_(Minecraft p_232897_, @Nullable Screen p_232898_) {
       m_232899_(p_232897_, f_232866_);
       PackRepository packrepository = new PackRepository(new ServerPacksSource());
+      net.minecraftforge.fml.ModLoader.get().postEvent(new net.minecraftforge.event.AddPackFindersEvent(net.minecraft.server.packs.PackType.SERVER_DATA, packrepository::addPackFinder));
       WorldLoader.InitConfig worldloader$initconfig = m_245574_(packrepository, WorldDataConfiguration.f_244649_);
       CompletableFuture<WorldCreationContext> completablefuture = WorldLoader.m_214362_(worldloader$initconfig, (p_247792_) -> {
          return new WorldLoader.DataLoadOutput<>(new CreateWorldScreen.DataPackReloadCookie(new WorldGenSettings(WorldOptions.m_247394_(), WorldPresets.m_246552_(p_247792_.f_244104_())), p_247792_.f_244127_()), p_247792_.f_243759_());
@@ -367,7 +_,7 @@
                if (p_269627_) {
                   p_270552_.accept(this.f_267389_.m_267573_().f_243842_());
                } else {
-                  p_270552_.accept(WorldDataConfiguration.f_244649_);
+                  p_270552_.accept(new WorldDataConfiguration(new DataPackConfig(ImmutableList.of("vanilla"), ImmutableList.of()), FeatureFlags.f_244332_)); // FORGE: Revert to *actual* vanilla data
                }
 
             }, Component.m_237115_("dataPack.validation.failed"), CommonComponents.f_237098_, Component.m_237115_("dataPack.validation.back"), Component.m_237115_("dataPack.validation.reset")));
@@ -416,28 +_,28 @@
    private Optional<LevelStorageSource.LevelStorageAccess> m_232868_() {
       String s = this.f_267389_.m_275837_();
 
-      try {
-         LevelStorageSource.LevelStorageAccess levelstoragesource$levelstorageaccess = this.f_96541_.m_91392_().m_78260_(s);
-         if (this.f_100831_ == null) {
-            return Optional.of(levelstoragesource$levelstorageaccess);
-         }
-
-         try (Stream<Path> stream = Files.walk(this.f_100831_)) {
-            Path path = levelstoragesource$levelstorageaccess.m_78283_(LevelResource.f_78180_);
-            FileUtil.m_257659_(path);
-            stream.filter((p_232921_) -> {
-               return !p_232921_.equals(this.f_100831_);
-            }).forEach((p_232945_) -> {
-               m_100912_(this.f_100831_, path, p_232945_);
-            });
-            return Optional.of(levelstoragesource$levelstorageaccess);
-         } catch (UncheckedIOException | IOException ioexception) {
-            f_100848_.warn("Failed to copy datapacks to world {}", s, ioexception);
-            levelstoragesource$levelstorageaccess.close();
-         }
-      } catch (UncheckedIOException | IOException ioexception1) {
-         f_100848_.warn("Failed to create access for {}", s, ioexception1);
-      }
+//      try {
+//         LevelStorageSource.LevelStorageAccess levelstoragesource$levelstorageaccess = this.minecraft.getLevelSource().createAccess(s);
+//         if (this.tempDataPackDir == null) {
+//            return Optional.of(levelstoragesource$levelstorageaccess);
+//         }
+//
+//         try (Stream<Path> stream = Files.walk(this.tempDataPackDir)) {
+//            Path path = levelstoragesource$levelstorageaccess.getLevelPath(LevelResource.DATAPACK_DIR);
+//            FileUtil.createDirectoriesSafe(path);
+//            stream.filter((p_232921_) -> {
+//               return !p_232921_.equals(this.tempDataPackDir);
+//            }).forEach((p_232945_) -> {
+//               copyBetweenDirs(this.tempDataPackDir, path, p_232945_);
+//            });
+//            return Optional.of(levelstoragesource$levelstorageaccess);
+//         } catch (UncheckedIOException | IOException ioexception) {
+//            LOGGER.warn("Failed to copy datapacks to world {}", s, ioexception);
+//            levelstoragesource$levelstorageaccess.close();
+//         }
+//      } catch (UncheckedIOException | IOException ioexception1) {
+//         LOGGER.warn("Failed to create access for {}", s, ioexception1);
+//      }
 
       SystemToast.m_94875_(this.f_96541_, s);
       this.m_100967_();
@@ -481,6 +_,7 @@
       if (path != null) {
          if (this.f_100832_ == null) {
             this.f_100832_ = ServerPacksSource.m_245786_(path);
+            net.minecraftforge.resource.ResourcePackLoader.loadResourcePacks(this.f_100832_, net.minecraftforge.server.ServerLifecycleHooks::buildPackFinder);
             this.f_100832_.m_10506_();
          }
 
